.386
.model flat, stdcall

PUBLIC START
STD_INPUT_HANDLE equ -10
STD_OUTPUT_HANDLE equ -11
PUBLIC main

INCLUDELIB kernel32.lib

ExitProcess proto:dword
ReadConsoleA proto :dword, :dword, :dword, :dword, :dword  
WriteConsoleA proto :dword, :dword, :dword, :dword, :dword

GetStdHandle proto :dword

.data
dSTART	DB	0
	DB	2	DUP(0)
stdin	DD	0
stdout	DD	0

.code
readc	PROC
         push EBP
         mov EBP, ESP
         push EAX
         push EBX
         push EDX
         cmp stdin, 0
         jne dalje_readc
         invoke GetStdHandle, STD_INPUT_HANDLE
         mov stdin, EAX
dalje_readc:
         sub ESP, 4
         mov EAX, ESP
         sub ESP, 4
         mov EBX, ESP
         invoke ReadConsoleA, stdin, EAX, 1, EBX, 0
         add ESP,4
         pop EAX
         mov [EBP+8], AL
         pop EDX
         pop EBX
         pop EAX
         pop EBP
         ret
readc   ENDP

readdec	PROC
         push EBP
         mov EBP, ESP
         push EBX
         push ECX
         push EDX
         mov ECX, 10
         mov EBX, 0
         mov EDX,0
??read:	push ECX
         sub ESP, 4
         call readc
         pop EAX
         pop ECX
         cmp AL,'-'
         je jesteminus
         jmp daljeminus
         jesteminus: 
         mov EDX,1
         push ECX
         sub ESP, 4
         call readc
         pop EAX
         pop ECX
daljeminus:
         cmp AL, '0'
         jb kraj_rddec
         cmp AL, '9'
         ja kraj_rddec
         sub AL, '0'
         push EAX
         mov EAX, EBX
         push EDX
         mul ECX
         pop EDX
         mov EBX, EAX
         pop EAX
         and EAX, 0000000fh
         add EBX, EAX
         jmp ??read
kraj_rddec:mov EAX, EBX
         cmp EDX,1
         je  negiraj
         jmp daljenegiraj
         negiraj: neg AL
daljenegiraj:
         pop EDX
         pop ECX
         pop EBX
         pop EBP
         ret
readdec	ENDP

printc	PROC par1:dword, par2:dword
         ; push EBP
         ; mov EBP, ESP
         push EAX
         push EBX
         push ECX
         cmp stdout, 0
         jne dalje_printc
         invoke GetStdHandle, STD_OUTPUT_HANDLE
         mov stdout, EAX
dalje_printc:
         mov ECX, [par1]
         mov EBX, EBP 
         add EBX, 8
         mov EAX, [par2]
         invoke WriteConsoleA, stdout, EAX, ECX, EBX, 0
         pop ECX	
         pop EBX
         pop EAX
         ; pop EBP
         ret
printc	ENDP

writedec PROC
         push EAX
         push EBX
         push ECX
          push EDX
         mov AH, 0
         mov CL, 10
          mov EBX, 0
         mov EDX, 0
         mov DL, AL
         and DL, 80h
         jnz obrni
         jmp ??write
obrni: neg AL
??write:div CL
         xchg AH, AL
         add AL,'0'
         push EAX
         inc EBX
         xchg AH, AL   
         cmp AL, 0
         je minusprovera
         mov AH, 0
         jmp ??write
minusprovera:
         cmp DL, 80h
         je dodajminus
         jmp kraj_wrdec
dodajminus:
         push '-'
         push ESP
         push 1
         call printc
         add ESP, 4
kraj_wrdec:
         cmp EBX, 0
         je kraj_skroz
         push ESP
         push 1
         call printc
         add ESP,4
         dec EBX
         jmp kraj_wrdec
kraj_skroz:
         pop EDX
         pop ECX
         pop EBX
         pop EAX
         ret
writedec ENDP


main:
         mov ECX, 0
START	xor CL, CL
         call readdec
         mov [0], AL
         call readdec
         mov [1], AL
         mov AL, 0
         add AL, [1]
         call writedec
         mov AL, 0
         sub AL, [1]
         call writedec
         invoke ExitProcess, 0
end main
